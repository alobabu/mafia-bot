import random
import time
from collections import defaultdict

class Player:
    def __init__(self, name, role):
        self.name = name
        self.role = role
        self.alive = True
        self.protected = False
        self.blocked = False
        self.visited = None
        self.has_healed_self = False
        self.special_block = False
        self.votes = 0
        self.protected_target = None
        self.is_lucky = role == "–°—á–∞—Å—Ç–ª–∏–≤—á–∏–∫"
        self.lucky_attacks = 0
        self.has_exploded = False
        self.vote_weight = 2 if role == "–ú—ç—Ä" else 1
        self.protected_by_lawyer = False
        self.has_protected_self = False if role == "–ê–¥–≤–æ–∫–∞—Ç" else None
        self.last_killed_by_maniac = None
        self.marked_by_arsonist = False
        self.disguised_as = None
        self.checked_with_commissioner = False
        self.werewolf_converted = False
        self.mag_pardoned = False
        self.is_afraid = False
        self.known_roles = set() if role == "–ñ—É—Ä–Ω–∞–ª–∏—Å—Ç" else None
        self.is_arsonist = role == "–ü–æ–¥–∂–∏–≥–∞—Ç–µ–ª—å"
        self.is_maniac = role == "–ú–∞–Ω—å—è–∫"
        self.is_suicidal = role == "–°–∞–º–æ—É–±–∏–π—Ü–∞"
        self.is_swindler = role == "–ê—Ñ–µ—Ä–∏—Å—Ç"

    def __str__(self):
        status = " ‚ö∞Ô∏è" if not self.alive else " üõ°Ô∏è" if self.protected else ""
        return f"{self.name} ({self.role}){status}"

class MafiaGame:
    def __init__(self, player_names):
        if len(player_names) < 4:
            raise ValueError("–î–ª—è –∏–≥—Ä—ã –Ω—É–∂–Ω–æ –º–∏–Ω–∏–º—É–º 4 –∏–≥—Ä–æ–∫–∞")
        
        roles = self._assign_roles(len(player_names))
        self.players = [Player(name, role) for name, role in zip(player_names, roles)]
        self.day_number = 0
        self.night_deaths = []
        self.arsonist_victims = []
        self.stukach_reveal = None
        self.mag_choices = []
        self.last_killed_by = None

    def _assign_roles(self, player_count):
        base_roles = [
            "–ú–∞—Ñ–∏—è", "–ö–æ–º–∏—Å—Å–∞—Ä", "–î–æ–∫—Ç–æ—Ä", "–î–æ–Ω", "–°–µ—Ä–∂–∞–Ω—Ç",
            "–õ—é–±–æ–≤–Ω–∏—Ü–∞", "–ë–æ–º–∂", "–ú—ç—Ä", "–°—á–∞—Å—Ç–ª–∏–≤—á–∏–∫",
            "–ö–∞–º–∏–∫–∞–¥–∑–µ", "–ú–∏—Ä–Ω—ã–π –∂–∏—Ç–µ–ª—å", "–ê–¥–≤–æ–∫–∞—Ç", "–£–±–∏–π—Ü–∞"
        ]
        
        extra_roles = [
            "–ú–∞–Ω—å—è–∫", "–ü–æ–¥–∂–∏–≥–∞—Ç–µ–ª—å", "–ê—Ñ–µ—Ä–∏—Å—Ç",
            "–°—Ç—É–∫–∞—á", "–ú–∞–≥", "–û–±–æ—Ä–æ—Ç–µ–Ω—å"
        ]
        
        roles = base_roles + extra_roles[:max(0, player_count - len(base_roles))]
        random.shuffle(roles)
        return roles[:player_count]

    def get_alive_players(self):
        return [p for p in self.players if p.alive]

    def get_players_by_role(self, role):
        return [p for p in self.players if p.role == role and p.alive]

    def reset_protections(self):
        for player in self.players:
            player.protected = False
            player.blocked = False
            player.visited = None
            if player.role == "–°—á–∞—Å—Ç–ª–∏–≤—á–∏–∫":
                player.lucky_attacks = 0

    def reset_votes(self):
        for player in self.players:
            player.votes = 0

    def select_player(self, prompt, player_list=None, excluded_roles=None, include_self=False):
        if player_list is None:
            player_list = self.get_alive_players()
        
        if excluded_roles:
            player_list = [p for p in player_list if p.role not in excluded_roles]
        
        print(prompt)
        for i, p in enumerate(player_list):
            print(f"{i + 1}. {p.name}")
        
        while True:
            try:
                choice = int(input("–ù–æ–º–µ—Ä –∏–≥—Ä–æ–∫–∞: ")) - 1
                if 0 <= choice < len(player_list):
                    return player_list[choice]
                print("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞")
            except ValueError:
                print("–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ!")

    def check_lucky_survival(self, target, attacker_role):
        if target.role != "–°—á–∞—Å—Ç–ª–∏–≤—á–∏–∫":
            return False
            
        target.lucky_attacks += 1
        
        if target.lucky_attacks == 1:
            print(f"{target.name} (–°—á–∞—Å—Ç–ª–∏–≤—á–∏–∫) –≤–µ–∑—É—á–∏–π! –ü–µ—Ä–≤–∞—è –∞—Ç–∞–∫–∞ {attacker_role} –Ω–µ —Å–º–æ–≥–ª–∞ –µ–≥–æ —É–±–∏—Ç—å!")
            return True
        elif target.lucky_attacks >= 2:
            if target.protected:
                print(f"{target.name} (–°—á–∞—Å—Ç–ª–∏–≤—á–∏–∫) —Å–Ω–æ–≤–∞ –≤–µ–∑—É—á–∏–π! –ó–∞—â–∏—Ç–∞ —Å–ø–∞—Å–∞–µ—Ç –µ–≥–æ –æ—Ç {attacker_role}!")
                return True
            else:
                print(f"{target.name} (–°—á–∞—Å—Ç–ª–∏–≤—á–∏–∫) –∏—Å—á–µ—Ä–ø–∞–ª —Å–≤–æ—é —É–¥–∞—á—É! {attacker_role} —É–±–∏–≤–∞–µ—Ç –µ–≥–æ!")
                return False
        return False

    def doctor_night_action(self):
        doctor = next((p for p in self.players if p.role == "–î–æ–∫—Ç–æ—Ä" and p.alive), None)
        if not doctor:
            return

        print(f"\n–î–æ–∫—Ç–æ—Ä {doctor.name}, –≤—ã–±–µ—Ä–∏, –∫–æ–≥–æ –∑–∞—â–∏—Ç–∏—Ç—å:")
        alive_players = self.get_alive_players()
        
        for i, p in enumerate(alive_players):
            if p == doctor and not doctor.has_healed_self:
                print(f"{i + 1}. {p.name} (—Å–µ–±—è)")
            else:
                print(f"{i + 1}. {p.name}")
        
        while True:
            try:
                choice = int(input("–ù–æ–º–µ—Ä –∏–≥—Ä–æ–∫–∞: ")) - 1
                if 0 <= choice < len(alive_players):
                    target = alive_players[choice]
                    
                    if target == doctor:
                        if doctor.has_healed_self:
                            print("–í—ã —É–∂–µ –ª–µ—á–∏–ª–∏ —Å–µ–±—è –≤ —ç—Ç–æ–π –∏–≥—Ä–µ! –í—ã–±–µ—Ä–∏—Ç–µ –¥—Ä—É–≥–æ–≥–æ –∏–≥—Ä–æ–∫–∞.")
                            continue
                        doctor.has_healed_self = True
                    
                    target.protected = True
                    print(f"–î–æ–∫—Ç–æ—Ä –∑–∞—â–∏—Ç–∏–ª {target.name}!")
                    break
                print("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞")
            except ValueError:
                print("–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ!")

    def commissioner_night_action(self):
        commissioner = next((p for p in self.players if p.role == "–ö–æ–º–∏—Å—Å–∞—Ä" and p.alive), None)
        if not commissioner or commissioner.blocked:
            return

        print(f"\n–ö–æ–º–∏—Å—Å–∞—Ä {commissioner.name}, –≤—ã–±–µ—Ä–∏ –¥–µ–π—Å—Ç–≤–∏–µ:")
        print("1. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∏–≥—Ä–æ–∫–∞")
        print("2. –í—ã—Å—Ç—Ä–µ–ª–∏—Ç—å –≤ –ø–æ–¥–æ–∑—Ä–µ–≤–∞–µ–º–æ–≥–æ")
        
        action = input("–í—ã–±–æ—Ä (1-2): ")
        
        if action == "1":
            target = self.select_player("–í—ã–±–µ—Ä–∏ –∏–≥—Ä–æ–∫–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏:", excluded_roles=["–£–±–∏–π—Ü–∞"])
            
            lawyer = next((p for p in self.players 
                         if p.role == "–ê–¥–≤–æ–∫–∞—Ç" and p.alive and p.protected_target == target), None)
            
            if target.role == "–£–±–∏–π—Ü–∞" or lawyer:
                print(f"–†–µ–∑—É–ª—å—Ç–∞—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏: {target.name} - –ú–∏—Ä–Ω—ã–π –∂–∏—Ç–µ–ª—å")
            else:
                print(f"–†–µ–∑—É–ª—å—Ç–∞—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏: {target.name} - {target.role}")
                
        elif action == "2":
            target = self.select_player("–í—ã–±–µ—Ä–∏ —Ü–µ–ª—å –¥–ª—è –≤—ã—Å—Ç—Ä–µ–ª–∞:", excluded_roles=["–£–±–∏–π—Ü–∞"])
            
            if target.role == "–£–±–∏–π—Ü–∞":
                print("–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ —É–±–∏—Ç—å –£–±–∏–π—Ü—É! –í—ã—Å—Ç—Ä–µ–ª –æ–±—Ä–∞—â–∞–µ—Ç—Å—è –ø—Ä–æ—Ç–∏–≤ –≤–∞—Å!")
                commissioner.alive = False
                self.night_deaths.append(commissioner)
            elif target.role == "–°—á–∞—Å—Ç–ª–∏–≤—á–∏–∫" and self.check_lucky_survival(target, "–ö–æ–º–∏—Å—Å–∞—Ä–∞"):
                return
            else:
                target.alive = False
                self.night_deaths.append(target)
                print(f"–ö–æ–º–∏—Å—Å–∞—Ä –∑–∞—Å—Ç—Ä–µ–ª–∏–ª {target.name}!")

    def sergeant_night_action(self):
        sergeant = next((p for p in self.players if p.role == "–°–µ—Ä–∂–∞–Ω—Ç" and p.alive), None)
        if not sergeant:
            return
            
        commissioner_alive = any(p.role == "–ö–æ–º–∏—Å—Å–∞—Ä" and p.alive for p in self.players)
        
        if not commissioner_alive:
            sergeant.role = "–ö–æ–º–∏—Å—Å–∞—Ä"
            print(f"\n–°–µ—Ä–∂–∞–Ω—Ç {sergeant.name} —Ç–µ–ø–µ—Ä—å –ö–æ–º–∏—Å—Å–∞—Ä –ö–∞—Ç—Ç–∞–Ω–∏!")
            self.commissioner_night_action()
        else:
            print(f"\n–°–µ—Ä–∂–∞–Ω—Ç {sergeant.name} –Ω–∞–±–ª—é–¥–∞–µ—Ç –∑–∞ –¥–µ–π—Å—Ç–≤–∏—è–º–∏ –ö–æ–º–∏—Å—Å–∞—Ä–∞...")

    def mistress_night_action(self):
        mistress = next((p for p in self.players if p.role == "–õ—é–±–æ–≤–Ω–∏—Ü–∞" and p.alive), None)
        if not mistress:
            return

        target = self.select_player(
            f"\n–õ—é–±–æ–≤–Ω–∏—Ü–∞ {mistress.name}, –≤—ã–±–µ—Ä–∏, –∫–æ–≥–æ –ø–æ—Å–µ—Ç–∏—Ç—å:",
            excluded_roles=["–£–±–∏–π—Ü–∞"]
        )
        
        target.blocked = True
        print(f"–õ—é–±–æ–≤–Ω–∏—Ü–∞ –ø–æ—Å–µ—Ç–∏–ª–∞ {target.name}! –û–Ω –Ω–µ —Å–º–æ–∂–µ—Ç –¥–µ–π—Å—Ç–≤–æ–≤–∞—Ç—å —ç—Ç–æ–π –Ω–æ—á—å—é.")
        
        if target.role == "–î–æ–Ω":
            target.special_block = True

    def bum_night_action(self):
        bum = next((p for p in self.players if p.role == "–ë–æ–º–∂" and p.alive), None)
        if not bum:
            return

        target = self.select_player(f"\n–ë–æ–º–∂ {bum.name}, –≤—ã–±–µ—Ä–∏, –∫ –∫–æ–º—É –ø–æ–π—Ç–∏ –∑–∞ –±—É—Ç—ã–ª–∫–æ–π:")
        bum.visited = target
        print(f"–ë–æ–º–∂ –ø–æ—à–µ–ª –∫ {target.name}... –£–≤–∏–¥–∏–º—Å—è —É—Ç—Ä–æ–º!")

    def mafia_night_action(self):
        mafia = self.get_players_by_role("–ú–∞—Ñ–∏—è") + self.get_players_by_role("–î–æ–Ω")
        if not mafia:
            return

        print(f"\n–ú–∞—Ñ–∏—è, –≤—ã–±–µ—Ä–∏, –∫–æ–≥–æ —É–±–∏—Ç—å:")
        don = next((p for p in mafia if p.role == "–î–æ–Ω"), mafia[0])
        
        if don.blocked and not don.special_block:
            print("–î–æ–Ω –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω –õ—é–±–æ–≤–Ω–∏—Ü–µ–π –∏ –Ω–µ –º–æ–∂–µ—Ç –¥–µ–π—Å—Ç–≤–æ–≤–∞—Ç—å!")
            return

        target = self.select_player("–í—ã–±–µ—Ä–∏ —Ü–µ–ª—å:", excluded_roles=["–£–±–∏–π—Ü–∞", "–ú–∞—Ñ–∏—è", "–î–æ–Ω"])
        
        if target.role == "–°—á–∞—Å—Ç–ª–∏–≤—á–∏–∫" and self.check_lucky_survival(target, "–ú–∞—Ñ–∏–∏"):
            return
        
        if target.role == "–ö–∞–º–∏–∫–∞–¥–∑–µ":
            if target.protected:
                print(f"–ö–∞–º–∏–∫–∞–¥–∑–µ {target.name} –ø–æ–¥ –∑–∞—â–∏—Ç–æ–π –¥–æ–∫—Ç–æ—Ä–∞ –∏ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω!")
                return
                
            target.alive = False
            self.night_deaths.append(target)
            print(f"–ö–∞–º–∏–∫–∞–¥–∑–µ {target.name} –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω! –û–Ω –≤—ã–±–µ—Ä–µ—Ç –∂–µ—Ä—Ç–≤—É —É—Ç—Ä–æ–º.")
            return
        
        if target.protected:
            print(f"–ú–∞—Ñ–∏—è –≤—ã–±—Ä–∞–ª–∞ —É–±–∏—Ç—å {target.name}, –Ω–æ –æ–Ω –±—ã–ª –ø–æ–¥ –∑–∞—â–∏—Ç–æ–π!")
        else:
            target.alive = False
            self.night_deaths.append(target)
            print(f"–ú–∞—Ñ–∏—è —É–±–∏–ª–∞ {target.name}!")
            
            if target.visited and target.visited.role == "–ë–æ–º–∂":
                print(f"–ë–æ–º–∂ {target.visited.name} –≤–∏–¥–µ–ª –î–æ–Ω–∞!")

    def maniac_night_action(self):
        maniac = next((p for p in self.players if p.role == "–ú–∞–Ω—å—è–∫" and p.alive), None)
        if not maniac or maniac.blocked:
            return

        print(f"\n–ú–∞–Ω—å—è–∫ {maniac.name}, –≤—ã–±–µ—Ä–∏ –∂–µ—Ä—Ç–≤—É:")
        targets = [p for p in self.get_alive_players() 
                 if p != maniac and p.role != "–ú–∞–≥" and p != maniac.last_killed_by_maniac]
        
        if not targets:
            print("–ù–µ—Ç –ø–æ–¥—Ö–æ–¥—è—â–∏—Ö —Ü–µ–ª–µ–π –¥–ª—è –º–∞–Ω—å—è–∫–∞")
            return
            
        target = self.select_player("–í—ã–±–µ—Ä–∏ –∂–µ—Ä—Ç–≤—É:", targets)
        
        if target.role == "–°—á–∞—Å—Ç–ª–∏–≤—á–∏–∫" and self.check_lucky_survival(target, "–ú–∞–Ω—å—è–∫–∞"):
            maniac.last_killed_by_maniac = target
            return
        
        if target.role == "–ö–∞–º–∏–∫–∞–¥–∑–µ":
            print("–ú–∞–Ω—å—è–∫ –ø–æ–ø—ã—Ç–∞–ª—Å—è —É–±–∏—Ç—å –ö–∞–º–∏–∫–∞–¥–∑–µ –∏ –ø–æ–≥–∏–± —Å–∞–º!")
            maniac.alive = False
            target.alive = False
            self.night_deaths.extend([maniac, target])
            return
            
        if target.protected:
            print(f"–ú–∞–Ω—å—è–∫ –Ω–µ —Å–º–æ–≥ —É–±–∏—Ç—å {target.name} - —Ü–µ–ª—å –ø–æ–¥ –∑–∞—â–∏—Ç–æ–π!")
        else:
            target.alive = False
            self.night_deaths.append(target)
            print(f"–ú–∞–Ω—å—è–∫ —É–±–∏–ª {target.name}!")
            maniac.last_killed_by_maniac = target
            
        don_kill = next((p for p in self.night_deaths if p.role == "–î–æ–Ω"), None)
        if don_kill and don_kill == target:
            print("–î–æ–Ω –∏ –ú–∞–Ω—å—è–∫ –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ –∞—Ç–∞–∫–æ–≤–∞–ª–∏ –æ–¥–Ω—É —Ü–µ–ª—å!")

    def arsonist_night_action(self):
        arsonist = next((p for p in self.players if p.role == "–ü–æ–¥–∂–∏–≥–∞—Ç–µ–ª—å" and p.alive), None)
        if not arsonist or arsonist.blocked:
            return

        print(f"\n–ü–æ–¥–∂–∏–≥–∞—Ç–µ–ª—å {arsonist.name}, –≤—ã–±–µ—Ä–∏ –∂–µ—Ä—Ç–≤—É:")
        targets = [p for p in self.get_alive_players() 
                 if p != arsonist and p.role != "–£–±–∏–π—Ü–∞" and not p.marked_by_arsonist]
        
        target = self.select_player("–í—ã–±–µ—Ä–∏ –∂–µ—Ä—Ç–≤—É:", targets)
        
        if len(self.arsonist_victims) >= 2 and target.role == "–°—á–∞—Å—Ç–ª–∏–≤—á–∏–∫":
            if self.check_lucky_survival(target, "–ü–æ–¥–∂–∏–≥–∞—Ç–µ–ª—è"):
                return
        
        target.marked_by_arsonist = True
        self.arsonist_victims.append(target)
        print(f"{target.name} –ø–æ–º–µ—á–µ–Ω –¥–ª—è –ø–æ–¥–∂–æ–≥–∞!")
        
        if len(self.arsonist_victims) >= 3:
            print("\n–ü–æ–¥–∂–∏–≥–∞—Ç–µ–ª—å –≥–æ—Ç–æ–≤ —Å–æ–≤–µ—Ä—à–∏—Ç—å –ø–æ–¥–∂–æ–≥!")
            choice = input("–•–æ—Ç–∏—Ç–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –ø–æ–¥–∂–æ–≥ —Å–µ–π—á–∞—Å? (–¥–∞/–Ω–µ—Ç): ").lower()
            if choice == '–¥–∞':
                arsonist.alive = False
                for victim in self.arsonist_victims:
                    if victim.protected:
                        print(f"{victim.name} —Å–ø–∞—Å—Å—è –æ—Ç –ø–æ–¥–∂–æ–≥–∞ –±–ª–∞–≥–æ–¥–∞—Ä—è –∑–∞—â–∏—Ç–µ!")
                    else:
                        victim.alive = False
                        self.night_deaths.append(victim)
                self.night_deaths.append(arsonist)
                print("–ü–æ–¥–∂–∏–≥–∞—Ç–µ–ª—å —Å–æ–≤–µ—Ä—à–∏–ª –º–∞—Å—Å–æ–≤—ã–π –ø–æ–¥–∂–æ–≥!")

    def swindler_night_action(self):
        swindler = next((p for p in self.players if p.role == "–ê—Ñ–µ—Ä–∏—Å—Ç" and p.alive), None)
        if not swindler or swindler.blocked:
            return

        print(f"\n–ê—Ñ–µ—Ä–∏—Å—Ç {swindler.name}, –≤—ã–±–µ—Ä–∏ –∏–≥—Ä–æ–∫–∞ –¥–ª—è –º–∞—Å–∫–∏—Ä–æ–≤–∫–∏:")
        targets = [p for p in self.get_alive_players() if p != swindler]
        
        target = self.select_player("–í—ã–±–µ—Ä–∏ –∏–≥—Ä–æ–∫–∞ –¥–ª—è –º–∞—Å–∫–∏—Ä–æ–≤–∫–∏:", targets)
        swindler.disguised_as = target
        print(f"–ê—Ñ–µ—Ä–∏—Å—Ç —Ç–µ–ø–µ—Ä—å –º–∞—Å–∫–∏—Ä—É–µ—Ç—Å—è –ø–æ–¥ {target.name}!")

    def stukach_night_action(self):
        stukach = next((p for p in self.players if p.role == "–°—Ç—É–∫–∞—á" and p.alive), None)
        if not stukach or stukach.blocked:
            return

        print(f"\n–°—Ç—É–∫–∞—á {stukach.name}, –≤—ã–±–µ—Ä–∏ –∏–≥—Ä–æ–∫–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏:")
        target = self.select_player("–í—ã–±–µ—Ä–∏ –∏–≥—Ä–æ–∫–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏:", self.get_alive_players())
        
        commissioner = next((p for p in self.players if p.role == "–ö–æ–º–∏—Å—Å–∞—Ä" and p.alive), None)
        if commissioner and commissioner.visited == target:
            self.stukach_reveal = target
            print(f"–°—Ç—É–∫–∞—á –∏ –ö–æ–º–∏—Å—Å–∞—Ä –ø—Ä–æ–≤–µ—Ä–∏–ª–∏ –æ–¥–Ω–æ–≥–æ –∏ —Ç–æ–≥–æ –∂–µ –∏–≥—Ä–æ–∫–∞ - {target.name}!")
        else:
            print("–ö–æ–º–∏—Å—Å–∞—Ä –Ω–µ –ø—Ä–æ–≤–µ—Ä—è–ª —ç—Ç–æ–≥–æ –∏–≥—Ä–æ–∫–∞ —ç—Ç–æ–π –Ω–æ—á—å—é")

    def mag_night_interaction(self):
        mag = next((p for p in self.players if p.role == "–ú–∞–≥" and p.alive), None)
        if not mag:
            return
            
        attackers = []
        for p in self.players:
            if p.role in ["–î–æ–Ω", "–ú–∞–Ω—å—è–∫", "–ö–æ–º–∏—Å—Å–∞—Ä"] and p.visited == mag and p.alive:
                attackers.append(p)
                
        if attackers:
            print(f"\n–ú–∞–≥ {mag.name}, –≤—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:")
            for i, attacker in enumerate(attackers):
                print(f"{i+1}. –ü–æ–º–∏–ª–æ–≤–∞—Ç—å {attacker.name} ({attacker.role})")
                print(f"{i+1}. –£–±–∏—Ç—å {attacker.name} ({attacker.role})")
                
            choices = []
            for attacker in attackers:
                choice = input(f"–ü–æ–º–∏–ª–æ–≤–∞—Ç—å (–ø) –∏–ª–∏ —É–±–∏—Ç—å (—É) {attacker.name}?: ").lower()
                choices.append((attacker, choice == '—É'))
                
            for attacker, kill in choices:
                if kill:
                    attacker.alive = False
                    self.night_deaths.append(attacker)
                    print(f"–ú–∞–≥ —É–±–∏–ª {attacker.name}!")
                else:
                    print(f"–ú–∞–≥ –ø–æ–º–∏–ª–æ–≤–∞–ª {attacker.name}")

    def werewolf_conversion(self):
        werewolf = next((p for p in self.players if p.role == "–û–±–æ—Ä–æ—Ç–µ–Ω—å" and not p.alive and not p.werewolf_converted), None)
        if not werewolf:
            return
            
        killer = self.last_killed_by
        if killer:
            if killer.role == "–ú–∞—Ñ–∏—è" or killer.role == "–î–æ–Ω":
                werewolf.role = "–ú–∞—Ñ–∏—è"
                werewolf.alive = True
                werewolf.werewolf_converted = True
                print(f"–û–±–æ—Ä–æ—Ç–µ–Ω—å {werewolf.name} –≤–æ—Å–∫—Ä–µ—Å –∫–∞–∫ –ú–∞—Ñ–∏—è!")
            elif killer.role == "–ö–æ–º–∏—Å—Å–∞—Ä":
                werewolf.role = "–°–µ—Ä–∂–∞–Ω—Ç"
                werewolf.alive = True
                werewolf.werewolf_converted = True
                print(f"–û–±–æ—Ä–æ—Ç–µ–Ω—å {werewolf.name} –≤–æ—Å–∫—Ä–µ—Å –∫–∞–∫ –°–µ—Ä–∂–∞–Ω—Ç!")
            elif killer.role in ["–ú–∞–Ω—å—è–∫", "–£–±–∏–π—Ü–∞"]:
                print(f"–û–±–æ—Ä–æ—Ç–µ–Ω—å {werewolf.name} –æ–∫–æ–Ω—á–∞—Ç–µ–ª—å–Ω–æ —É–±–∏—Ç {killer.role}–æ–º!")
            elif killer.role == "–î–æ–Ω" and any(p.role == "–ö–æ–º–∏—Å—Å–∞—Ä" and p.visited == werewolf for p in self.players):
                print(f"–û–±–æ—Ä–æ—Ç–µ–Ω—å {werewolf.name} —É–±–∏—Ç –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ –î–æ–Ω–æ–º –∏ –ö–æ–º–∏—Å—Å–∞—Ä–æ–º!")

    def kamikaze_trigger(self, executed):
        if executed.role == "–ö–∞–º–∏–∫–∞–¥–∑–µ" and not executed.protected:
            print(f"\n{executed.name} –±—ã–ª –∫–∞–º–∏–∫–∞–¥–∑–µ! –û–Ω –º–æ–∂–µ—Ç –∑–∞–±—Ä–∞—Ç—å —Å —Å–æ–±–æ–π –æ–¥–Ω–æ–≥–æ –∏–≥—Ä–æ–∫–∞")
            
            targets = [p for p in self.get_alive_players() 
                     if p != executed and p.role not in ["–ö–∞–º–∏–∫–∞–¥–∑–µ", "–£–±–∏–π—Ü–∞"]]
            
            if targets:
                target = self.select_player("–í—ã–±–µ—Ä–∏ —Ü–µ–ª—å –¥–ª—è —Å–∞–º–æ—É–Ω–∏—á—Ç–æ–∂–µ–Ω–∏—è:", targets)
                target.alive = False
                print(f"–ö–∞–º–∏–∫–∞–¥–∑–µ –∑–∞–±—Ä–∞–ª —Å —Å–æ–±–æ–π {target.name} ({target.role})!")
            else:
                print("–ù–µ—Ç –ø–æ–¥—Ö–æ–¥—è—â–∏—Ö —Ü–µ–ª–µ–π –¥–ª—è –ö–∞–º–∏–∫–∞–¥–∑–µ")

    def check_suicide_win(self, executed):
        if executed.role == "–°–∞–º–æ—É–±–∏–π—Ü–∞":
            print(f"{executed.name} –¥–æ–±–∏–ª—Å—è —Å–≤–æ–µ–π —Ü–µ–ª–∏ - –µ–≥–æ –∫–∞–∑–Ω–∏–ª–∏!")

    def mayor_day_action(self):
        mayor = next((p for p in self.players if p.role == "–ú—ç—Ä" and p.alive), None)
        if mayor:
            print(f"\n–ú—ç—Ä {mayor.name} –∏–º–µ–µ—Ç –¥–≤–æ–π–Ω–æ–π –≥–æ–ª–æ—Å –Ω–∞ —ç—Ç–æ–º –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–∏!")
            return mayor

    def lawyer_night_action(self):
        lawyer = next((p for p in self.players if p.role == "–ê–¥–≤–æ–∫–∞—Ç" and p.alive), None)
        if not lawyer or lawyer.blocked:
            return

        print(f"\n–ê–¥–≤–æ–∫–∞—Ç {lawyer.name}, –≤—ã–±–µ—Ä–∏ –∫–æ–≥–æ –∑–∞—â–∏—Ç–∏—Ç—å:")
        targets = [p for p in self.get_alive_players() 
                  if p.role in ["–ú–∞—Ñ–∏—è", "–î–æ–Ω", "–£–±–∏–π—Ü–∞", "–ñ—É—Ä–Ω–∞–ª–∏—Å—Ç"] or p == lawyer]
        
        for i, p in enumerate(targets):
            if p == lawyer and not lawyer.has_protected_self:
                print(f"{i + 1}. {p.name} (—Å–µ–±—è)")
            else:
                print(f"{i + 1}. {p.name}")

        choice = int(input("–ù–æ–º–µ—Ä –∏–≥—Ä–æ–∫–∞: ")) - 1
        target = targets[choice]
        
        if target == lawyer:
            lawyer.has_protected_self = True
        target.protected_by_lawyer = True
        lawyer.protected_target = target
        print(f"–ê–¥–≤–æ–∫–∞—Ç –∑–∞—â–∏—Ç–∏–ª {target.name}!")

    def killer_night_action(self):
        killer = next((p for p in self.players if p.role == "–£–±–∏–π—Ü–∞" and p.alive), None)
        if not killer or (killer.blocked and not killer.special_block):
            return

        print(f"\n–£–±–∏–π—Ü–∞ {killer.name}, –≤—ã–±–µ—Ä–∏ —Ü–µ–ª—å:")
        targets = [p for p in self.get_alive_players() 
                  if p.role in ["–ë–æ–º–∂", "–î–æ–∫—Ç–æ—Ä", "–õ—é–±–æ–≤–Ω–∏—Ü–∞", "–°–µ—Ä–∂–∞–Ω—Ç", "–ö–∞–º–∏–∫–∞–¥–∑–µ", "–ú–∞–Ω—å—è–∫", "–ü–æ–¥–∂–∏–≥–∞—Ç–µ–ª—å"]]
        
        target = self.select_player("–í—ã–±–µ—Ä–∏ –∂–µ—Ä—Ç–≤—É:", targets)
        
        if target.role == "–ö–æ–º–∏—Å—Å–∞—Ä":
            killer.alive = False
            self.night_deaths.append(killer)
            print("–£–±–∏–π—Ü–∞ –ø–æ–ø—ã—Ç–∞–ª—Å—è —É–±–∏—Ç—å –ö–æ–º–∏—Å—Å–∞—Ä–∞ –∏ –ø–æ–≥–∏–± —Å–∞–º!")
        elif target.protected:
            print(f"–£–±–∏–π—Ü–∞ –Ω–µ —Å–º–æ–≥ —É–±–∏—Ç—å {target.name} - —Ü–µ–ª—å –ø–æ–¥ –∑–∞—â–∏—Ç–æ–π!")
        else:
            target.alive = False
            self.night_deaths.append(target)
            print(f"–£–±–∏–π—Ü–∞ —É—Å—Ç—Ä–∞–Ω–∏–ª {target.name} ({target.role})!")

    def night_phase(self):
        print("\n=== –ù–æ—á—å ===")
        self.reset_protections()
        self.night_deaths = []
        self.stukach_reveal = None

        # –ü–æ—Ä—è–¥–æ–∫ –¥–µ–π—Å—Ç–≤–∏–π:
        self.mistress_night_action()    # –õ—é–±–æ–≤–Ω–∏—Ü–∞
        self.doctor_night_action()      # –î–æ–∫—Ç–æ—Ä
        self.lawyer_night_action()      # –ê–¥–≤–æ–∫–∞—Ç
        self.mafia_night_action()       # –ú–∞—Ñ–∏—è/–î–æ–Ω
        self.killer_night_action()      # –£–±–∏–π—Ü–∞
        self.maniac_night_action()      # –ú–∞–Ω—å—è–∫
        self.commissioner_night_action()# –ö–æ–º–∏—Å—Å–∞—Ä
        self.sergeant_night_action()    # –°–µ—Ä–∂–∞–Ω—Ç
        self.bum_night_action()         # –ë–æ–º–∂
        self.stukach_night_action()     # –°—Ç—É–∫–∞—á
        self.swindler_night_action()    # –ê—Ñ–µ—Ä–∏—Å—Ç
        self.arsonist_night_action()    # –ü–æ–¥–∂–∏–≥–∞—Ç–µ–ª—å
        self.mag_night_interaction()    # –ú–∞–≥
        self.werewolf_conversion()      # –û–±–æ—Ä–æ—Ç–µ–Ω—å

    def morning_announcement(self):
        print("\n=== –£—Ç—Ä–æ ===")
        if not self.night_deaths:
            print("–≠—Ç–æ–π –Ω–æ—á—å—é –Ω–∏–∫—Ç–æ –Ω–µ –ø–æ–≥–∏–±!")
        else:
            for victim in self.night_deaths:
                print(f"–ò–≥—Ä–æ–∫ {victim.name} ({victim.role}) –±—ã–ª —É–±–∏—Ç –Ω–æ—á—å—é! ‚ö∞Ô∏è")
        
        if self.stukach_reveal:
            print(f"–°—Ç—É–∫–∞—á –∏ –ö–æ–º–∏—Å—Å–∞—Ä –ø—Ä–æ–≤–µ—Ä–∏–ª–∏ {self.stukach_reveal.name} - —ç—Ç–æ {self.stukach_reveal.role}!")

    def day_phase(self):
        self.day_number += 1
        print(f"\n=== –î–µ–Ω—å {self.day_number} ===")
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞—Ñ–µ—Ä–∏—Å—Ç–∞ —É –º—ç—Ä–∞
        mayor = next((p for p in self.players if p.role == "–ú—ç—Ä" and p.alive), None)
        swindler = next((p for p in self.players if p.role == "–ê—Ñ–µ—Ä–∏—Å—Ç" and p.alive), None)
        
        if mayor and swindler and swindler.disguised_as == mayor:
            print(f"‚ö†Ô∏è –ê—Ñ–µ—Ä–∏—Å—Ç {swindler.name} –º–∞—Å–∫–∏—Ä—É–µ—Ç—Å—è –ø–æ–¥ –º—ç—Ä–∞!")
            swindler.vote_weight = 2

        # –ì–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ
        print("\n–ì–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ –∑–∞ –∫–∞–∑–Ω—å:")
        votes = defaultdict(int)
        for voter in self.get_alive_players():
            if voter.blocked and voter.role != "–£–±–∏–π—Ü–∞":
                print(f"{voter.name} –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω –∏ –Ω–µ –º–æ–∂–µ—Ç –≥–æ–ª–æ—Å–æ–≤–∞—Ç—å!")
                continue
                
            target = self.select_player(f"{voter.name}, –∑–∞ –∫–æ–≥–æ –≥–æ–ª–æ—Å—É–µ—Ç–µ:", include_self=True)
            votes[target.name] += voter.vote_weight
            print(f"{voter.name} –≥–æ–ª–æ—Å—É–µ—Ç –ø—Ä–æ—Ç–∏–≤ {target.name} (–≤–µ—Å: {voter.vote_weight})")

        # –ü–æ–¥—Å—á–µ—Ç –≥–æ–ª–æ—Å–æ–≤
        if votes:
            max_votes = max(votes.values())
            candidates = [name for name, count in votes.items() if count == max_votes]
            
            if len(candidates) > 1:
                print("\n–ù–µ—Å–∫–æ–ª—å–∫–æ –∏–≥—Ä–æ–∫–æ–≤ –ø–æ–ª—É—á–∏–ª–∏ –æ–¥–∏–Ω–∞–∫–æ–≤–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≥–æ–ª–æ—Å–æ–≤!")
            else:
                executed_name = candidates[0]
                executed = next(p for p in self.get_alive_players() if p.name == executed_name)
                
                if executed.protected_by_lawyer:
                    print(f"{executed.name} –ø–æ–¥ –∑–∞—â–∏—Ç–æ–π –∞–¥–≤–æ–∫–∞—Ç–∞ –∏ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –∫–∞–∑–Ω–µ–Ω!")
                else:
                    executed.alive = False
                    print(f"{executed.name} –∫–∞–∑–Ω—ë–Ω –ø–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è!")
                    
                    if executed.role == "–ö–∞–º–∏–∫–∞–¥–∑–µ":
                        self.kamikaze_trigger(executed)
                    elif executed.role == "–°–∞–º–æ—É–±–∏–π—Ü–∞":
                        self.check_suicide_win(executed)

        self.reset_votes()
        self.reset_protections()

    def check_win_condition(self):
        mafia = self.get_players_by_role("–ú–∞—Ñ–∏—è") + self.get_players_by_role("–î–æ–Ω")
        civilians = [p for p in self.get_alive_players() if p.role not in ["–ú–∞—Ñ–∏—è", "–î–æ–Ω", "–ú–∞–Ω—å—è–∫", "–ü–æ–¥–∂–∏–≥–∞—Ç–µ–ª—å", "–ê—Ñ–µ—Ä–∏—Å—Ç", "–£–±–∏–π—Ü–∞"]]
        neutrals = [p for p in self.get_alive_players() if p.role in ["–ú–∞–Ω—å—è–∫", "–ü–æ–¥–∂–∏–≥–∞—Ç–µ–ª—å", "–ê—Ñ–µ—Ä–∏—Å—Ç", "–£–±–∏–π—Ü–∞"]]

        if not mafia and not any(p.role == "–£–±–∏–π—Ü–∞" for p in self.get_alive_players()):
            print("\n–ú–∏—Ä–Ω—ã–µ –∂–∏—Ç–µ–ª–∏ –ø–æ–±–µ–¥–∏–ª–∏! üéâ")
            return True
        if len(mafia) >= len(civilians) + len(neutrals):
            print("\n–ú–∞—Ñ–∏—è –ø–æ–±–µ–¥–∏–ª–∞! üî™")
            return True
        if len(neutrals) == 1 and neutrals[0].role == "–ú–∞–Ω—å—è–∫":
            print("\n–ú–∞–Ω—å—è–∫ –ø–æ–±–µ–¥–∏–ª, —É–±–∏–≤ –≤—Å–µ—Ö! üòà")
            return True
        if len(self.get_alive_players()) == 1 and self.get_alive_players()[0].role == "–ê—Ñ–µ—Ä–∏—Å—Ç":
            print("\n–ê—Ñ–µ—Ä–∏—Å—Ç –ø–æ–±–µ–¥–∏–ª, –ø–µ—Ä–µ–∂–∏–≤ –≤—Å–µ—Ö! üé≠")
            return True
        return False

    def start_game(self):
        print("–ò–≥—Ä–∞ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è! –†–æ–ª–∏ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω—ã.")
        time.sleep(1)
        
        # –î–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è - –ø–æ–∫–∞–∑–∞—Ç—å —Ä–æ–ª–∏
        for p in self.players:
            print(f"{p.name}: {p.role}")
        time.sleep(3)
        
        while True:
            self.night_phase()
            self.morning_announcement()
            if self.check_win_condition():
                break

            self.day_phase()
            if self.check_win_condition():
                break

if __name__ == "__main__":
    try:
        players = input("–í–≤–µ–¥–∏—Ç–µ –∏–º–µ–Ω–∞ –∏–≥—Ä–æ–∫–æ–≤ —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é: ").split(',')
        players = [name.strip() for name in players if name.strip()]
        
        if len(players) < 4:
            print("–û—à–∏–±–∫–∞: –¥–ª—è –∏–≥—Ä—ã –Ω—É–∂–Ω–æ –º–∏–Ω–∏–º—É–º 4 –∏–≥—Ä–æ–∫–∞")
        else:
            game = MafiaGame(players)
            game.start_game()
    except Exception as e:
        print(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {e}")
